g + geom_bar()
pl <- ggplot(hous, aes(factor(year), sales))
pl + geom_boxplot()
pl <- ggplot(head(hous), aes(factor(year), sales))
pl + geom_boxplot()
pl <- ggplot(head(hous,30), aes(factor(year), sales))
pl + geom_boxplot()
source("~/R_Programs/ggplot_assignment.R")
#Histogram of cyl values
p2 <- ggplot(cars,aes(x=cty))
p2 + geom_histogram()
library(ggplot2)
library(ggplot2movies)
cars <- mpg
#Histogram of cyl values
p2 <- ggplot(cars,aes(x=cty))
p2 + geom_histogram()
source("~/R_Programs/ggplot_assignment.R")
library(ggplot2)
pl <- ggplot(mpg,aes(x=displ,y=hwy)) + geom_point()
pl + coord_cartesian(xlim=c(1,4),ylim=c(15,30))
pl + coord_fixed(ratio = 1/3)
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p + facet_grid(. ~ cyl)
p + facet_grid(drv ~ .)
p + facet_grid(drv ~ cyl)
library(ggplot2)
df <- movies
qplot(x=year, y=rating, data = df, geom = "density2d")
pl <- ggplot(movies,aes(x = year,y=rating))
pl + geom_bin2d()
pl + geom_bin2d(binwidth=c(2,1))
pl + geom_density2d()
pl + geom_hex()
pl <- ggplot(movies,aes(x = year,y=rating))
pl + geom_bin2d()
pl + geom_bin2d(binwidth=c(2,1))
pl + geom_density2d()
pl + geom_hex() + scale_fill_gradient(high='red',low='blue')
df <- data.frame(value = c(10, 23, 15, 18),
group = paste0("G", 1:4))
library(ggplot2)
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col() +
coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_label(aes(label = value),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_label(aes(label = value),
color = "white",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_brewer()
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_manual(values = c("#BE2A3E", "#EC754A",
"#EACF65", "#3C8D53"))
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_brewer() +
theme_bw()
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_brewer() +
theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_brewer() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "#ebf2ff"),
plot.background = element_rect(fill = "#ebf2ff"),
legend.background = element_rect(fill = "#ebf2ff"))
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Title"))
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_discrete(labels = c("A", "B", "C", "D"))
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme(legend.position = "bottom")
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme(legend.position = "none")
library(reshape)
set.seed(8)
m <- matrix(round(rnorm(200), 2), 10, 10)
colnames(m) <- paste("Col", 1:10)
rownames(m) <- paste("Row", 1:10)
df <- melt(m)
colnames(df) <- c("x", "y", "value")
set.seed(8)
m <- matrix(round(rnorm(200), 2), 10, 10)
colnames(m) <- paste("Col", 1:10)
rownames(m) <- paste("Row", 1:10)
df <- melt(m)
colnames(df) <- c("x", "y", "value"
)
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = value)) +
geom_tile()
install.packages("RMySQL")
mysqlconnection = dbconnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
mysqlconnection = dbConnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
mysqlconnection = dbconnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
mysqlconnection = dbConnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
library(RMySQL)
mysqlconnection = dbConnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
dbListTables(mysqlconnection)
result = dbSendQuery(mysqlconnection,"select * from emp")
data.frame = fetch(result,n = 5)
print(data.frame)
result = dbSendQuery(mysqlconnection,"select * from trainers")
data.frame = fetch(result,n = 5)
data.frame = fetch(result)
print(data.frame)
result = dbSendQuery(mysqlconnection,"select * from login_credentials")
data.frame = fetch(result)
print(data.frame)
result = dbSendQuery(mysqlconnection,"select * from emp where salary < 20000")
data.frame = fetch(result)
print(data.frame)
dbWriteTable(mysqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
library(RMySQL)
sqlconnection = dbConnect(MySQL(), user = 'root', password = 'Seth@1234', dbname = 'atharva', host = 'localhost')
dbListTables(sqlconnection)
result = dbSendQuery(sqlconnection,"select * from emp")
data.Frame = fetch(result)
print(data.frame)
print(data.Frame)
dbWriteQuery(sqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
dbWriteTable(sqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
View(df)
df <- mtcars
bWriteTable(sqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
dbWriteTable(sqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
dbSendQuery(sqlconnection, "SET GLOBAL local_infile = true;")
dbWriteTable(sqlconnection,"mtcars",mtcars[, ],overwrite = TRUE)
dbSendQuery(mysqlconnection,
"insert into mtcars(row_names, mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb)
values('New Mazda RX4 Wag', 21, 6, 168.5, 110, 3.9, 2.875, 17.02, 0, 1, 4, 4)"
)
result = dbSendQuery(sqlconnection,"select * from mtcars")
data.cars = fetch(result,n = 10)
print(data.cars)
library(ggplot2)
library(lattice)
library(caret)
orange <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/orange_juice_withmisssing.csv')
orange <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/orange_juice_withmissing.csv')
str(orange)
head(orange[,1:10])
set.seed(100)
orange_train <- createDataPartition(orange$Purchase , p=0.8, list = FALSE)
orange_train_rows <- createDataPartition(orange$Purchase , p=0.8, list = FALSE)
orange_train <- orange[orange_train_rows,]
orange_test <- orange[-orange_train_rows,]
View(orange_train)
View(orange)
View(orange_test)
x = orange_train[, 2: 18]
y = orange_train$Purchase
library(skimr)
skimmed <- skim_to_wide(orange_train)
skimmed[,c(1:5,9:11,13,15:16)]
preProcess_missingdata_model <- preProcess(orange_train, method = 'knnImpute')
preProcess_missingdata_model
library(RANN)
orange_train <- predict(preProcess_missingdata_model, newdata = orange_train)
anyNA(orange_train)
dummies_model <- dummyVars(Purchase ~ ., data = orange_train)
orange_train_mat <- predict(dummies_model, newdata = orange_train)
orange_train_mat
orange_train2 <- data.frame(orange_train_mat)
str(orange_train2)
preProcess_range_model <- preProcess(orange_train2, method = 'range')
orange_train2 <- predict(preProcess_range_model, newdata = orange_train2)
orange_train2
library(ggplot2)
library(ggplot2movies)
df <- movies <- movies[sample(nrow(movies),1000),]
clear
clear
clear()
q()
df <- data.frame(value = c(10,13,15,18))
df <- data.frame(value = c(10,13,15,18), group = paste0("G",1:4))
df
library(ggplot2)
ggplot(df, aes(x = "", y = value, fill = group)) + goem_col() + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col() + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col() + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_label(aes(label = value), position = position_stack(vjust = 0.5), show.legend = FALSE) + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_label(aes(label = value), position = position_stack(vjust = 0.5), show.legend = TRUE) + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_label(aes(label = value), position = position_stack(vjust = 0.5), show.legend = FALSE) + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_manual(values = c("#BE2A3E", "#EC754A","#EACF65", "#3C8D53"))
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_bw()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_void()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme_bw()
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) +coord_polar(theta = "y") + scale_fill_brewer() + theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank() + panel.grid = element_blank(), panel.background = element_rect(fill = "#ebf2ff"), plot.background = element_rect(fill = #ebf2ff), legend.background = element_rect(fill = "#ebf2ff"))
ggplot(df, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
scale_fill_brewer() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "#ebf2ff"),
plot.background = element_rect(fill = "#ebf2ff"),
legend.background = element_rect(fill = "#ebf2ff"))
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_brewer() + theme(axis.text = element_blank(),axis.ticks = element_blank(),axis.title = element_blank(),panel.grid = element_blank(),panel.background = element_rect(fill = "#ebf2ff"),plot.background = element_rect(fill = "#ebf2ff"),legend.background = element_rect(fill = "#ebf2ff"))
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + guides(fill = guide_legend(title = "Title"))
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + scale_fill_discrete(labels = c("A","B","C","D"))
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + theme(legend.position = "bottom")
ggplot(df, aes(x = "", y = value, fill = group)) + geom_col(color = "black") + geom_text(aes(label = value), position = position_stack(vjust = 0.5)) + coord_polar(theta = "y") + theme(legend.position = "none")
clr()
clear()
library(reshape)
set.seed(8)
m <- matrix(round(rnorm(200), 2), 10, 10)
colnames(m) <- paste("Col", 1:10)
rownames(m) <- paste("Row", 1:10)
m
df <- melt(m)
colnames(df) <- c("x","y","value")
df
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile() + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "white", lwd = 1.5, linetype = 1) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = white, size = 4) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value), color = "white", size = 4) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = white, size = 4) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = white, size = 4) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "white", lwd = 1.5, linetype = 1) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = white, size = 4) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value), color = "white", size = 4) + coord_fixed()
ggplot(df, aes(x = x, y= y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = white, size = 4) + scale_fill_gradient(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y= y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "white"", size = 4) + scale_fill_gradient(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y= y, fill = value)) + geom_tile(color = "black") + scale_fill_gradient(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) +
geom_tile(color = "black") +
scale_fill_gradient2(low = "#075AFF",
mid = "#FFFFCC",
high = "#FF0000") +
coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "white"", size = 4) + scale_fill_gradient2(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "white", size = 4) + scale_fill_gradient2(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradient2(low = "#075AFF", mid = "#FFFFCC", high = "#FF0000") + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradientn(colors = hcl.colors(20, "RdYlGn")) + coord_fixed()
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradientn(colors = hcl.colors(20, "RdYlGn")) + coord_fixed() + guides(fill = guide_colorbar(barwidth = 0.5, barheight = 20))
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradientn(colors = hcl.colors(20, "RdYlGn")) + coord_fixed() + guides(fill = guide_colorbar(title = "Title",barwidth = 0.5, barheight = 20))
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradientn(colors = hcl.colors(20, "RdYlGn")) + coord_fixed() + guides(fill = guide_colorbar(label = FALSE, ticks = TRUE))
ggplot(df, aes(x = x, y = y, fill = value)) + geom_tile(color = "black") + geom_text(aes(label = value),color = "black", size = 4) + scale_fill_gradientn(colors = hcl.colors(20, "RdYlGn")) + coord_fixed() + theme(legend.position = "none")
library(ggplot2)
pl <- ggplot(mpg,aes(x=displ,y=hwy)) + geom_point()
pl
pl + coord_cartesian(xlim=c(1,4),ylim=c(15,30))
pl + coord_fixed(ratio = 1/3)
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p + facet_grid(. ~ cyl)
p + facet_grid(drv ~ .)
p + facet_grid(drv ~ cyl)
library(ggplot2)
library(ggplot2movies)
df <- movies
qplot(x=year, y=rating, data = df, geom = "density2d")
pl <- ggplot(movies,aes(x = year,y=rating))
pl + geom_bin2d()
pl + geom_bin2d(binwidth=c(2,1))
pl + geom_density2d()
pl + geom_hex()
pl + geom_hex() + scale_fill_gradient(high='red',low='blue')
library(ggplot2)
library(ggplot2movies)
df <- movies <- movies[sample(nrow(movies), 1000), ]
df <- movies <- movies[sample(nrow(movies), 1000), ]
library(ggplot2)
library(ggplot2movies)
df <- movies <- movies[sample(nrow(movies), 1000), ]
df <- mtcars
qplot(wt,mpg,data=df)
qplot(wt,mpg,data=df,color = cyl)
qplot(wt,mpg,data=df,size = cyl,color = cyl)
qplot(wt,mpg,data=df,size = cyl,color = cyl, alpha = 0.6)
pl <- ggplot(data = df, aes(x = wt, y= mpg))
pl + geom_point(aes(size=factor(cyl)))
pl <- ggplot(data = df, aes(x = wt, y = mpg))
pl + geom_point(aes(shape=factor(cyl), color = factor(cyl), size = 4, alpha = 0.6))
pl + geom_point(aes(shape=factor(cyl), color = factor(cyl), size = factor(cyl), alpha = 0.6))
pl + geom_point(aes(color = hp), size =  factor(cyl)) + scale_color_gradient(high = "red", low = "blue")
pl <- ggplot(data = df, aes(x = wt, y = mpg))
pl + geom_point(aes(color = hp), size =  factor(cyl)) + scale_color_gradient(high = "red", low = "blue")
df <- mtcars
qplot(factor(cyl), mpg, data = mtcars, geom = "boxplot")
qplot(factor(cyl), mpg, data = df, geom = "boxplot")
df <- mtcars
qplot(factor(cyl), mpg, data = df, geom = "boxplot")
pl <- ggplot(df, aes(factor(cyl), mpg))
pl + geom_boxplot()
df <- mtcars
pl + geom_boxplot() + coord_flip()
pl + geom_boxplot(aes(fill = factor(cyl))) + coord_flip()
pl + geom_boxplot(fill = "grey", color = "blue")
library(ggplot2)
library(ggplot2movies)
df <- movies <- movies[sample(nrow(movies),1000)]
df <- movies <- movies[sample(nrow(movies),1000),]
df
qplot(rating,data=df,geom = "histogram",binwidth=0.1,alpha=0.8)
qplot(rating,data=df,geom = "histogram",binwidth=0.1,alpha=0.3)
qplot(rating,data=df,geom = "histogram",binwidth=0.2,alpha=0.3)
qplot(rating,data=df,geom="histogram",binwidth=0.1,alpha=0.5)
pl <- ggplot(df,aes(x=rating))
pl + geom_histogram()
pl + geom_histogram(color = "blue")
pl + geom_histogram(binwidth = 0.1,color = "blue",fill = "pink")
pl + geom_histogram(binwidth = 0.1,color = "red",fill = "pink") + xlabel("Movie Rating") + ylabel("Occurences") + ggtitle("Movie ratings")
pl + geom_histogram(binwidth = 0.1,color = "red",fill = "pink") + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl + geom_histogram(binwidth = 0.1,color = "red",fill = "pink",alpha = 0.6) + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl + geom_histogram(binwidth = 0.1,color = "red",fill = "pink",linetype = dotted) + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl + geom_histogram(binwidth = 0.1,color = "red",fill = "pink",linetype = "dotted") + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl + geom_histogram(binwidth = 0.1,aes(fill =..count..)) + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl2 <- pl + geom_histogram(binwidth = 0.1,aes(fill =..count..)) + xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl2 + scale_fill_gradient('Count',low = "red",high = "green")
pl + geom_histogram(aes(y =..density..))
pl + geom_histogram(aes(y =..density..)) + geom_density(color="red")
pl2 <- pl + geom_histogram(binwidth = 0.1,aes(fill =..count..,y=..density)) + geom_density(color="red")+ xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl2
pl3 <- pl + geom_histogram(binwidth = 0.1,aes(fill =..count..,y=..density..)) + geom_density(color="red")+ xlab("Movie Rating") + ylab("Occurences") + ggtitle("Movie ratings")
pl3
df <- mtcars
qplot(wt,mpg,data=df)
qplot(wt,mpg,size=cyl,data=df)
qplot(wt,mpg,size=cyl,color=factor(cyl),data=df)
qplot(wt,mpg,size=cyl,color=cyl,data=df)
qplot(wt,mpg,size=cyl,color=cyl,data=df,aplha = 0.6)
qplot(wt,mpg,size=cyl,color=cyl,data=df,alpha = 0.6)
pl <- ggplot(data = df,aes(x=wt,y=mpg))
pl + geom_point()
pl + geom_point(aes(shape=factor(cyl)))
pl + geom_point(aes(size=factor(cyl))
pl + geom_point(aes(size=factor(cyl))
pl + geom_point(aes(size=factor(cyl)))
pl + geom_point(aes(color=factor(cyl)))
pl + geom_point(aes(color=factor(cyl),size=cyl))
pl + geom_point(aes(color=factor(cyl),size=factor(cyl))
)
pl + geom_point(aes(color=factor(cyl),size=cyl))
pl + geom_pint(aes(color = hp),size = 4) + scale_color_gradient(high="red",low="pink")
pl + geom_point(aes(color = hp),size = 4) + scale_color_gradient(high="red",low="pink")
pl + geom_point(aes(color = hp),size = cyl) + scale_color_gradient(high="red",low="pink")
pl + geom_point(aes(color = hp),size = 4) + scale_color_gradient(high="red",low="pink")
pl + geom_point(aes(color = hp,size = cyl)) + scale_color_gradient(high="red",low="pink")
g <- ggplot(mpg,aes(class))
g + geom_bar()
g + geom_bar(aes(fill = drv))
g + geom_bar(aes(fill = drv), position = "dodge")
df <- mtcars
qplot(factor(cyl),mpg,data=mtcars,geom="boxplot")
g <- ggplot(data = df,aes(factor(cyl)),mpg)
g + geom_boxplot()
g <- ggplot(df,aes(factor(cyl)),mpg)
g <- ggplot(mtcars,aes(factor(cyl)),mpg)
g <- ggplot(mtcars,aes(factor(cyl),mpg)
g <- ggplot(mtcars,aes(factor(cyl),mpg)
g <- ggplot(mtcars,aes(factor(cyl),mpg))
g + geom_boxplot()
g + geom_boxplot() + coord_flip()
g + geom_boxplot(aes(fill = factor(cyl))) + coord_flip()
source("~/R_Programs/armstrong.R")
state = state.x77
head(state)
tail(state)
summary(state)
struct(state)
str(state)
d1 <- data.frame(Product = c('Mango','Tooothbrush','Pen','Butter','Laptop','Camera'),
Stock = c(123,200,125,300,40,250),
Category = c('Fruit','Hygene','Stationary','Dairy','Electronic','Electronic'),
Cost = c(5,20,2,15,250,300))
print(d1)
d2 <- data.frame(Product = "Scissor", Stock = 430, Category = "Stationary", Cost = 12)
d3 <- rbind(d1,d2)
d3
d3$discount <- c("Yes","Yes","No","No","No","Yes","No")
print("New data is")
print(d3)
print("Back to 0riginal")
d3 <- d3[-c(1,5),]
d3
d3 <- subset(d3,select = -c(discount))
d3
helloyou
source("~/R_Programs/Func.R")
source("~/R_Programs/Func.R")
source("~/R_Programs/Func.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
View(count_of_floc)
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
source("~/R_Programs/c1.R")
setwd("D:/Python_programs/Sustainabilty_Project")
library(ENMeval)
library(raster)
library(MASS)
BIO1 <- raster("BIO1INDIA.asc")
BIO2 <- raster("BIO2INDIA.asc")
BIO3 <- raster("BIO3INDIA.asc")
BIO4 <- raster("BIO4INDIA.asc")
BIO5 <- raster("BIO5INDIA.asc")
BIO6 <- raster("BIO6INDIA.asc")
BIO7 <- raster("BIO7INDIA.asc")
BIO8 <- raster("BIO8INDIA.asc")
BIO9 <- raster("BIO9INDIA.asc")
BIO10 <- raster("BIO10INDIA.asc")
BIO11 <- raster("BIO11INDIA.asc")
BIO12 <- raster("BIO12INDIA.asc")
BIO13 <- raster("BIO13INDIA.asc")
BIO14 <- raster("BIO14INDIA.asc")
BIO15 <- raster("BIO15INDIA.asc")
BIO16 <- raster("BIO16INDIA.asc")
BIO17 <- raster("BIO17INDIA.asc")
BIO18 <- raster("BIO18INDIA.asc")
BIO19 <- raster("BIO19INDIA.asc")
View(BIO1)
env <- stack(BIO1,Bio2,BIO3,BIO4,BIO5,BIO6,BIO7,BIO8,BIO9,BIO10,BIO11,BIO12,BIO13,BIO14,BIO15,BIO16,BIO17,BIO18,BIO19)
env <- stack(BIO1,BIO2,BIO3,BIO4,BIO5,BIO6,BIO7,BIO8,BIO9,BIO10,BIO11,BIO12,BIO13,BIO14,BIO15,BIO16,BIO17,BIO18,BIO19)
View(env)
occ <- read.csv("JO_Full.csv")[,-1]
View(occ)
View(occ)
occur.ras <- rasterize(occ, env, 1)
plot(occur.ras)
presences <- which(values(occur.ras) == 1)
pres.locs <- coordinates(occur.ras)[presences, ]
dens <- kde2d(pres.locs[,1], pres.locs[,2], n = c(nrow(occur.ras), ncol(occur.ras)), lims = c(extent(env)[1], extent(env)[2], extent(env)[3], extent(env)[4]))
dens.ras <- raster(dens, env)
dens.ras2 <- resample(dens.ras, env)
plot(dens.ras2)
writeRaster(dens.ras2, "biasfile.asc", overwrite = TRUE)
length(which(!is.na(values(subset(env, 1)))))
length(which(!is.na(values(subset(env, 1)))))
bg <- xyFromCell(dens.ras2, sample(which(!is.na(values(subset(env, 1)))), 10000, prob=values(dens.ras2)[!is.na(values(subset(env, 1)))]))
colnames(bg) <- colnames(occ)
enmeval_results <- ENMevaluate(occ, env, bg, tune.args = list(fc = c("L","LQ","H", "LQH", "LQHP", "LQHPT"), rm = 1:5), partitions = "randomkfold", partition.settings = list(kfolds = 10), algorithm = "maxnet")
write.csv(enmeval_results@results, "enmeval_results.csv")
memory.limit()
memory.size()
